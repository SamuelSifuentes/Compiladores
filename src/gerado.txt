section .data
M:
    resb 0x10000
	resd 1
	dd 10
	resb 1
dd 0
section .text
global _start
_start:
mov EAX, [M +65540]
mov [M +65536], EAX
mov EAX, [M +65548]
mov [M +65544], EAX
	mov EAX,[M + 65536]; 			 move valor da constante para um registrador
	mov [M + 0], EAX; 			 move valor do registrador para endereco de memoria temporaria
	mov EAX, 0 
	mov RDI, 0 
	mov EAX, [ M + 65536 ] 
	mov RDI, M + 4 
	mov RCX, 0 
	mov RSI, 0 
	cmp EAX, 0 
	jge ROTULO_1 
	mov BL, '-' 
	mov [RDI], BL 
	add RDI, 1 
	neg EAX 
ROTULO_1:
	mov EBX, 10 
	mov EDX, 0 
	idiv EBX 
	push DX 
	add RCX, 1 
	cmp EAX, 0 
	jne ROTULO_1 
ROTULO_2:
	pop AX 
	add AX, '0' 
	mov [RDI], AL 
	add RDI, 1 
	sub RCX, 1 
	cmp RCX, 0 
	jg ROTULO_2
	mov [RDI], byte 0 
	sub RDI, M + 4 ; 
	mov RSI, M + 4 ; 
	mov RDX, RDI
	mov RAX, 1 ; 
	mov RDI, 1
	syscall
	mov RSI, M + 8
	mov [RSI], byte 10
	mov RDX, 1
	mov RAX, 1
	mov RDI, 1
	syscall
	mov AL,[M +65544]; 			 move valor da constante para um registrador
	mov [M + 0], AL; 			 move valor do registrador para endereco de memoria temporaria
	mov AL,[ M+65544] 			 ; 
	cmp AL, 1 			 ; 
	jne ROTULO_3 			 ; 
	mov EAX,[M + 65536]; 			 move valor da constante para um registrador
	mov [M + 0], EAX; 			 move valor do registrador para endereco de memoria temporaria
	mov EAX, 0 
	mov RDI, 0 
	mov EAX, [ M + 65536 ] 
	mov RDI, M + 4 
	mov RCX, 0 
	mov RSI, 0 
	cmp EAX, 0 
	jge ROTULO_5 
	mov BL, '-' 
	mov [RDI], BL 
	add RDI, 1 
	neg EAX 
ROTULO_5:
	mov EBX, 10 
	mov EDX, 0 
	idiv EBX 
	push DX 
	add RCX, 1 
	cmp EAX, 0 
	jne ROTULO_5 
ROTULO_6:
	pop AX 
	add AX, '0' 
	mov [RDI], AL 
	add RDI, 1 
	sub RCX, 1 
	cmp RCX, 0 
	jg ROTULO_6
	mov [RDI], byte 0 
	sub RDI, M + 4 ; 
	mov RSI, M + 4 ; 
	mov RDX, RDI
	mov RAX, 1 ; 
	mov RDI, 1
	syscall
	mov RSI, M + 8
	mov [RSI], byte 10
	mov RDX, 1
	mov RAX, 1
	mov RDI, 1
	syscall
	jmp ROTULO_4 			 ; 
ROTULO_3:
	mov EAX,2; 			 move valor da constante para um registrador
	mov [M + 0], EAX; 			 move valor do registrador para endereco de memoria temporaria
	mov EAX,[M +0];			  move endereco da expressao para registrador
	mov [M +65536], EAX; 			  move valor do registrador para o endereco do identificador
	mov EAX,[M + 65536]; 			 move valor da constante para um registrador
	mov [M + 0], EAX; 			 move valor do registrador para endereco de memoria temporaria
	mov EAX, 0 
	mov RDI, 0 
	mov EAX, [ M + 65536 ] 
	mov RDI, M + 4 
	mov RCX, 0 
	mov RSI, 0 
	cmp EAX, 0 
	jge ROTULO_7 
	mov BL, '-' 
	mov [RDI], BL 
	add RDI, 1 
	neg EAX 
ROTULO_7:
	mov EBX, 10 
	mov EDX, 0 
	idiv EBX 
	push DX 
	add RCX, 1 
	cmp EAX, 0 
	jne ROTULO_7 
ROTULO_8:
	pop AX 
	add AX, '0' 
	mov [RDI], AL 
	add RDI, 1 
	sub RCX, 1 
	cmp RCX, 0 
	jg ROTULO_8
	mov [RDI], byte 0 
	sub RDI, M + 4 ; 
	mov RSI, M + 4 ; 
	mov RDX, RDI
	mov RAX, 1 ; 
	mov RDI, 1
	syscall
	mov RSI, M + 8
	mov [RSI], byte 10
	mov RDX, 1
	mov RAX, 1
	mov RDI, 1
	syscall
ROTULO_4:
	mov rax, 60
	mov rdi, 0
	syscall
